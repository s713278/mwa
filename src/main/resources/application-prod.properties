logging.level.org.springframework.web: ERROR
logging.logger.org.hibernate=ERROR
logging.level.net.mwa.service : INFO
logging.level.net.mwa.controller : INFO

#Set active environment

#jdbc:mysql://localhost:3306/ala_db?useSSL=false
#spring.datasource.url = jdbc:mysql://node28571-gapsdev.cloud.cms500.com/ala_db
spring.datasource.url = jdbc:mysql://localhost:3306/mayurina_prod3
#
#Username and password
spring.datasource.username=mayurina_skunta
spring.datasource.password=Happy_789)

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# Enable basic authentication.
#security.basic.enabled:false
# Enable Cross Site Request Forgery support.
#security.enable-csrf:false
#management.security.enabled: false 
#Cors
#endpoints.cors.allowed-origins=*
#endpoints.cors.allowed-methods=GET,POST
spring.session.store-type=none